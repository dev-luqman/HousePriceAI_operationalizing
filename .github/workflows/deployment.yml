name: Node js app deploy to EKS
on:
  push:
    branches: [infra]
  pull_request:
    branches: [infra]

jobs:
  integration:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ml_app
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.*') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # - name: SetUp Env
      #   run: |
      #     make setup

      - name: Install requirements
        run: |
          make install

      - name: Run Test
        run: |
          make test

      - name: Lint Application
        run: |
          make lint

      - name: Lint Dockerfile with hadolint
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: ml_app/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ml_app
    if: github.event_name == 'push'
    needs: integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0' # default is latest stable
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        working-directory: ml_app
        run: docker build -t housing_api .

      - name: Tags
        run: |
          docker tag housing_api ${{ secrets.DOCKER_USER }}/housing_api:${{ github.sha }}
          docker tag housing_api ${{ secrets.DOCKER_USER }}/housing_api:latest
      - name: Push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/housing_api:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USER }}/housing_api:latest

      - name: Update kube config
        run: aws eks update-kubeconfig --name eks

      - name: Create Namespace
        working-directory: deployment
        continue-on-error: true
        run: |
          kubectl create namespace deployment

      - name: Deploy to EKS
        working-directory: deployment
        run: |
          kubectl apply -f ml_app.yml
          kubectl set image deployment/housing -n=deployment housing=lukhee/housing_api:latest
          kubectl get svc -n svc
