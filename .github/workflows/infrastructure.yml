name: Infrastructure_Deployment

on:
  push:
    branches: [infrastructure]
  pull_request:
    branches: [infrastructure]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install TerrformDocs,  & tflint
        run: |
          sudo apt update
          sudo apt install snapd
          sudo snap install terraform-docs
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: core-api-alert
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: ${{ github.event.head_commit.message }}
          SLACK_TITLE: Commit Message
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK  }}
        if: always()

  EKS_Deployment:
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Terraform Set-up
        working-directory: ./terraform/eks_infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform --version

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform/eks_infrastructure
        id: init
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: ./terraform/eks_infrastructure
        id: plan
        # if: github.event_name == 'pull_request'
        run: |
          terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        working-directory: ./terraform/eks_infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve
      # - name: Lint dockerfile
      #   uses: hadolint/hadolint-action@v3.1.0
      #   with:
      #     dockerfile: ./ml_app/Dockerfile
